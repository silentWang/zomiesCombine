{"version":3,"sources":["assets\\script\\manager\\ChickData.ts"],"names":[],"mappings":";;;;;;AACA,+CAA0C;AAC1C,wCAAmC;AACnC,8CAAyC;AAEzC,0CAAqC;AAErC;IAAA;IA8CA,CAAC;IA1CiB,cAAI,GAAlB,UAAoB,OAAwB;QAAxB,wBAAA,EAAA,eAAwB;QACxC,SAAS,CAAC,eAAe,EAAE,CAAC;QAC5B,IAAI,GAAG,GAAG,EAAE,CAAA;QACZ,GAAG,CAAC,MAAM,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,CAAA;QACzC,GAAG,CAAC,cAAc,CAAC,GAAG,eAAK,CAAC,aAAa,EAAE,CAAA;QAC3C,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAClC,gBAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC;IAEa,yBAAe,GAA7B;QACI,IAAI,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC;QACxC,IAAG,MAAM,GAAG,CAAC,EAAC;YACV,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,eAAK,CAAC,aAAa,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;YAClD,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;YACnC,IAAG,CAAC,IAAI,CAAC,EAAC;gBACN,SAAS,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;gBAChC,SAAS,CAAC,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;gBACvC,SAAS,CAAC,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;aAC3C;SACJ;IACL,CAAC;IAEa,kBAAQ,GAAtB;QAAA,iBAkBC;QAjBG,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAC,MAAM;YAC9B,gBAAM,CAAC,cAAc,CAAC,UAAC,IAAI;gBACvB,IAAI,IAAI,EAAE;oBACN,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;oBACrC,SAAS,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAA;oBAC9C,KAAI,CAAC,eAAe,EAAE,CAAC;iBAC1B;qBACI;oBACD,aAAa;oBACb,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;oBAC5C,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;oBAC5C,kBAAQ,CAAC,QAAQ,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC;oBAClC,kBAAQ,CAAC,QAAQ,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC;iBACrC;gBACD,OAAO,CAAC,CAAC,CAAC,CAAC;YACf,CAAC,CAAC,CAAA;QACN,CAAC,CAAC,CAAA;IACN,CAAC;IA3Ca,cAAI,GAAc,IAAI,mBAAS,EAAE,CAAC;IAClC,kBAAQ,GAAG,KAAK,CAAC;IA4CnC,gBAAC;CA9CD,AA8CC,IAAA;kBA9CoB,SAAS","file":"","sourceRoot":"/","sourcesContent":["\r\nimport UserModel from \"../game/UserModel\";\r\nimport Utils from \"../utils/Utils\";\r\nimport AudioMgr from \"../utils/AudioMgr\";\r\nimport GameConst from \"../game/GameConst\";\r\nimport Native from \"../utils/Native\";\r\n\r\nexport default class ChickData {\r\n    public static user: UserModel = new UserModel();\r\n    public static isFreeAd = false;\r\n    \r\n    public static save( bRemote: boolean = false) {\r\n        ChickData.resetOneDayData();\r\n        let obj = {}\r\n        obj['user'] = ChickData.user.getAllData()\r\n        obj['savedatatime'] = Utils.getServerTime()\r\n        let strdata = JSON.stringify(obj);\r\n        Native.saveDataToApp(strdata);\r\n    }\r\n\r\n    public static resetOneDayData(){\r\n        let sdtime = ChickData.user.dayDateTime;\r\n        if(sdtime > 0){\r\n            let n = new Date(Utils.getServerTime()).getDate();\r\n            let d = new Date(sdtime).getDate();\r\n            if(n != d){\r\n                ChickData.user.share_times = 10;\r\n                ChickData.user.today_getcoin_times = 0;\r\n                ChickData.user.today_getchick_times = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    public static loadData() {\r\n        return new Promise((resolve,reject)=>{\r\n            Native.getDataFromApp((data)=>{\r\n                if (data) {\r\n                    ChickData.user.setData(data['user']);\r\n                    ChickData.user.dayDateTime = data.savedatatime\r\n                    this.resetOneDayData();\r\n                }\r\n                else {\r\n                    //没有档案重置下音乐开关\r\n                    cc.sys.localStorage.setItem(\"bgmVolume\", 1);\r\n                    cc.sys.localStorage.setItem(\"sfxVolume\", 1);\r\n                    AudioMgr.Instance().sfxVolume = 1;\r\n                    AudioMgr.Instance().bgmVolume = 1;\r\n                }\r\n                resolve(1);\r\n            })\r\n        })\r\n    }\r\n\r\n}\r\n"]}