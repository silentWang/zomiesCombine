{"version":3,"sources":["assets\\script\\utils\\NumberRoll.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6CAAwC;AAElC,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAwC,8BAAM;IAA9C;QAAA,qEAoCC;QA7BW,UAAI,GAAW,CAAC,CAAC;QACjB,aAAO,GAAW,CAAC,CAAC;QAEpB,aAAO,GAAW,CAAC,CAAC;;IA0BhC,CAAC;IAjCG,0BAAK,GAAL;QACI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;IAClD,CAAC;IAMD,sBAAW,6BAAK;aAAhB,UAAiB,CAAS;YACtB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7G,CAAC;;;OAAA;IAED,2BAAM,GAAN,UAAO,EAAU;QACb,IAAG,EAAE,GAAC,CAAC;YAAC,EAAE,GAAC,CAAC,CAAC;QACb,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,CAAC,EAAE;YACrC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YACtC,OAAO;SACV;QAED,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;YAC3B,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC;YAE1B,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE;gBAC9C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAA;aAC3B;YACD,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE;gBAC9C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAA;aAC3B;SACJ;QAED,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IACvC,CAAC;IAnCgB,UAAU;QAD9B,OAAO;OACa,UAAU,CAoC9B;IAAD,iBAAC;CApCD,AAoCC,CApCuC,gBAAM,GAoC7C;kBApCoB,UAAU","file":"","sourceRoot":"/","sourcesContent":["import BaseUI from '../framwork/BaseUI';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NumberRoll extends BaseUI {\r\n\r\n    private label: cc.Label;\r\n    start() {\r\n        this.label = this.node.getComponent(cc.Label);\r\n    }\r\n\r\n    private _cur: number = 0;\r\n    private _target: number = 0;\r\n\r\n    private _offset: number = 0;\r\n    public set vaule(n: number) {\r\n        this._target = n;\r\n        this._offset = Math.floor((this._target - this._cur) / Math.min(30, Math.abs(this._target - this._cur)));\r\n    }\r\n\r\n    update(dt: number) {\r\n        if(dt>1)dt=1;\r\n        if (1 / dt < cc.game.getFrameRate() / 2) {\r\n            this.label.string = this._target + \"\";\r\n            return;\r\n        }\r\n\r\n        if (this._cur != this._target) {\r\n            this._cur += this._offset;\r\n\r\n            if (this._offset > 0 && this._cur > this._target) {\r\n                this._cur = this._target\r\n            }\r\n            if (this._offset < 0 && this._cur < this._target) {\r\n                this._cur = this._target\r\n            }\r\n        }\r\n\r\n        this.label.string = this._cur + \"\";\r\n    }\r\n}"]}