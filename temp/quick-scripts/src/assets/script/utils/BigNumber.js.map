{"version":3,"sources":["assets\\script\\utils\\BigNumber.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BigNumber {\r\n    private static aLetters: any = [\"K\", 3, \"M\", 6, \"B\", 9, \"T\", 12, \"aa\", 15, \"bb\", 18, \"cc\", 21, \"dd\", 24, \"ee\", 27, \"ff\", 30, \"gg\", 33, \"hh\", 36, \"ii\", 39,\"jj\",42,'kk',45,'ll',48,'mm',51,'nn',54,'oo',57,'pp',60,'qq',63,'rr',66,'ss',69,'tt',72,'uu',75,'vv',78,'ww',81,'xx',84,'yy',87,'zz',90,'aaa',93,'bbb',96,'ccc',99,'ddd',102,'eee',105,'fff',108,'ggg',111,'hhh',114,'iii',117,'jjj',120,'kkk',123,'lll',126,'mmm',129,'nnn',132,'ooo',135,'ppp',138,'qqq',141,'rrr',144,'sss',147,'ttt',150,'uuu',153,'vvv',156,'www',159,'xxx',162,'yyy',165,'zzz'];\r\n\r\n    \r\n    public static getN(param1: string): Number {\r\n        var _loc_2: number = 0;\r\n        while (_loc_2 < BigNumber.aLetters.length) {\r\n\r\n            if (BigNumber.aLetters[_loc_2] == param1) {\r\n                return Math.pow(10, BigNumber.aLetters[(_loc_2 + 1)]);\r\n            }\r\n            _loc_2 = _loc_2 + 2;\r\n        }\r\n        return 0;\r\n    }// end function\r\n\r\n    public static getLargeString(param1: number, param2: string = \"K\", param3: Boolean = true): string {\r\n        if(param1==0)return param1+'';\r\n        //  if(param1<999)\r\n        //      return param1+'';\r\n            \r\n        var _loc_8: string = null;\r\n        var _loc_11: number = NaN;\r\n        var _loc_4: any = Math.round(param1 / Math.abs(param1));\r\n        param1 = Math.abs(param1);\r\n        var _loc_5: any = param1;\r\n        var _loc_6: number = 0;\r\n        var _loc_7: number = 0;\r\n        var _loc_9: number = 0;\r\n        var _loc_10: number = 0;\r\n        while (_loc_10 < BigNumber.aLetters.length) {\r\n\r\n            if (BigNumber.aLetters[_loc_10] == param2) {\r\n                _loc_7 = _loc_10;\r\n                break;\r\n            }\r\n            _loc_10 = _loc_10 + 2;\r\n        }\r\n        if (param1 < Math.pow(10, BigNumber.aLetters[(_loc_7 + 1)])) {\r\n            _loc_6 = -1;\r\n        }\r\n        else {\r\n            _loc_11 = Math.pow(10, BigNumber.aLetters[(_loc_7 + 1)]);\r\n            _loc_6 = _loc_7 / 2;\r\n            while (_loc_5 / 1000 >= _loc_11) {\r\n\r\n                _loc_5 = _loc_5 / 1000;\r\n                _loc_6++;\r\n            }\r\n            while (_loc_5 / 1000 >= 1000) {\r\n\r\n                _loc_5 = _loc_5 / 1000;\r\n            }\r\n        }\r\n        if (_loc_6 == -1) {\r\n           \r\n                return BigNumber.addSeparators(Math.round((param1 - 0.5) * _loc_4).toString());\r\n        }\r\n        if (_loc_5 / 1000 < 10) {\r\n            _loc_9 = 2;\r\n        }\r\n        else if (_loc_5 / 1000 < 100) {\r\n            _loc_9 = 1;\r\n        }\r\n        _loc_5 = _loc_5 / Math.pow(10, 3 - _loc_9);\r\n        _loc_5 = parseInt(_loc_5);\r\n        _loc_5 = _loc_5 / Math.pow(10, _loc_9);\r\n        if(param3)\r\n            return (_loc_5 * _loc_4).toFixed(2) + \"\" + BigNumber.aLetters[_loc_6 * 2];\r\n        else\r\n            return (_loc_5 * _loc_4).toString() + \"\" + BigNumber.aLetters[_loc_6 * 2];\r\n    }// end function\r\n\r\n    public static addSeparators(param1: string, param2: string = \",\"): string {\r\n        var _loc_3: any = param1.charAt(0) == \"-\";\r\n        if (_loc_3) {\r\n            param1 = param1.substr(1);\r\n        }\r\n        var _loc_4: string = \"\";\r\n        var _loc_5: string = \"\";\r\n        var _loc_6: number = 0;\r\n        var _loc_7: any = param1.length - 1;\r\n        while (_loc_7 > 0) {\r\n\r\n            _loc_4 = param1.charAt(_loc_7) + _loc_4;\r\n            _loc_6++;\r\n            if (_loc_6 % 3 == 0) {\r\n                _loc_4 = param2 + _loc_4;\r\n            }\r\n            _loc_7 = _loc_7 - 1;\r\n        }\r\n        _loc_4 = param1.charAt(0) + _loc_4;\r\n        if (_loc_3) {\r\n            _loc_4 = \"-\" + _loc_4;\r\n        }\r\n        return _loc_4;\r\n    }// end function\r\n\r\n    public static convertToLargeString(param1: number): string {\r\n\r\n        return BigNumber.getStringOfNumber(param1);\r\n    }// end function\r\n\r\n    public static getStringOfNumber(param1: number, param2: Boolean = false, param3: Boolean = false, param4: Boolean = false): string {\r\n        var _loc_5: number = 1;\r\n        if (param4) {\r\n            _loc_5 = 10;\r\n        }\r\n        var _loc_6: any = Math.round(param1);\r\n        if (Math.round(param1) >= 1000000 && _loc_6 < 1000000000 && param2) {\r\n            return (Math.round(_loc_6 / 1000 / _loc_5) / (1000 / _loc_5)).toString() + \" M\";\r\n        }\r\n        if (_loc_6 >= 1000000000 && _loc_6 < 1000000000000) {\r\n            return (Math.round(_loc_6 / 1000000 / _loc_5) / (1000 / _loc_5)).toString() + \" B\";\r\n        }\r\n        if (_loc_6 >= 1000000000000 && _loc_6 < 1000000000000000) {\r\n            return (Math.round(_loc_6 / 1000000000 / _loc_5) / (1000 / _loc_5)).toString() + \" T\";\r\n        }\r\n        if (_loc_6 >= 1000000000000000 && _loc_6 < 1000000000000000000) {\r\n            return (Math.round(_loc_6 / 1000000000000 / _loc_5) / (1000 / _loc_5)).toString() + \" q\";\r\n        }\r\n        if (_loc_6 >= 1000000000000000000 && _loc_6 < 1000000000000000000000) {\r\n            return (Math.round(_loc_6 / 1000000000000000 / _loc_5) / (1000 / _loc_5)).toString() + \" Qq\";\r\n        }\r\n        if (_loc_6 >= 1000000000000000000000 && _loc_6 < 999999999999999980000000) {\r\n            return (Math.round(_loc_6 / 1000000000000000000 / _loc_5) / (1000 / _loc_5)).toString() + \" s\";\r\n        }\r\n        if (_loc_6 >= 999999999999999980000000 && _loc_6 < 1000000000000000000000000000) {\r\n            return (Math.round(_loc_6 / 1000000000000000000000 / _loc_5) / (1000 / _loc_5)).toString() + \" Ss\";\r\n        }\r\n        if (_loc_6 >= 1000000000000000000000000000 && _loc_6 < 1000000000000000000000000000000) {\r\n            return (Math.round(_loc_6 / 999999999999999980000000 / _loc_5) / (1000 / _loc_5)).toString() + \" O\";\r\n        }\r\n        if (_loc_6 >= 1000000000000000000000000000000 && _loc_6 < 999999999999999950000000000000000) {\r\n            return (Math.round(_loc_6 / 1000000000000000000000000000 / _loc_5) / (1000 / _loc_5)).toString() + \" N\";\r\n        }\r\n        if (_loc_6 >= 999999999999999950000000000000000 && _loc_6 < 100000000000000000000000000) {\r\n            return (Math.round(_loc_6 / 1000000000000000000000000000000 / _loc_5) / (1000 / _loc_5)).toString() + \" d\";\r\n        }\r\n        if (_loc_6 >= 100000000000000000000000000 && _loc_6 < 99999999999999991000000000000) {\r\n            return (Math.round(_loc_6 / 999999999999999950000000000000000 / _loc_5) / (1000 / _loc_5)).toString() + \" U\";\r\n        }\r\n        if (_loc_6 >= 99999999999999991000000000000 && _loc_6 < 100000000000000010000000000000000) {\r\n            return (Math.round(_loc_6 / 100000000000000000000000000 / _loc_5) / (1000 / _loc_5)).toString() + \" Dd\";\r\n        }\r\n        var _loc_7: string = \" \";\r\n        if (param3) {\r\n            _loc_7 = \",\";\r\n        }\r\n        var _loc_8: string = \"\";\r\n        var _loc_9: any = String(Math.round(param1));\r\n        var _loc_10: any = String(Math.round(param1)).length - 1;\r\n        while (_loc_10 >= 0) {\r\n\r\n            _loc_8 = _loc_9.charAt(_loc_10) + _loc_8;\r\n            if (_loc_8.length == 3 && _loc_10 != 0) {\r\n                _loc_8 = _loc_7 + _loc_8;\r\n            }\r\n            if (_loc_8.length == 7 && _loc_10 != 0) {\r\n                _loc_8 = _loc_7 + _loc_8;\r\n            }\r\n            _loc_10 = _loc_10 - 1;\r\n        }\r\n        return _loc_8;\r\n    }// end function\r\n\r\n}\r\n"]}