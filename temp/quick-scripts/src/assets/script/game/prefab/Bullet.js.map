{"version":3,"sources":["assets\\script\\game\\prefab\\Bullet.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gDAA2C;AAG3C,iCAA4B;AAGtB,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAoC,0BAAM;IAA1C;QAAA,qEAiEC;QA9BW,YAAM,GAAW,IAAI,CAAC;QACtB,UAAI,GAAU,GAAG,CAAC;QAClB,aAAO,GAAG,CAAC,CAAC;;IA4BxB,CAAC;IA/DG,sBAAK,GAAL;QAEI,IAAI,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACtC,IAAG,EAAE,EAAC;YACF,EAAE,CAAC,OAAO,GAAG,CAAC,CAAC;YACf,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC,CAAC;SACpC;QACD,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;IAC1B,CAAC;IACD,uBAAM,GAAN,UAAQ,EAAE;QACN,IAAG,EAAE,GAAG,CAAC;YAAE,EAAE,GAAG,CAAC,CAAC;QAClB,IAAI,IAAI,CAAC,MAAM,EACf;YACI,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC,EAAE,EAAC,CAAC,CAAC,CAAC,CAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACzE,IAAG,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE,GAAE,CAAC,EAC9B;gBACI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,eAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClD,+DAA+D;gBAC/D,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;gBACpB,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBACjC,OAAO;aACV;YACD,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;YAC1C,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,GAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;SAC9E;aAED;YACI,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;SACpC;IAEL,CAAC;IAKK,wBAAO,GAAb,UAAc,MAAc,EAAC,OAAc;;;gBAEvC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAC,EAAE,CAAC,CAAA;gBAC9B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;gBACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;;;;KAsBxB;IAhEgB,MAAM;QAD1B,OAAO;OACa,MAAM,CAiE1B;IAAD,aAAC;CAjED,AAiEC,CAjEmC,gBAAM,GAiEzC;kBAjEoB,MAAM","file":"","sourceRoot":"/","sourcesContent":["import BaseUI from \"../../framwork/BaseUI\";\r\nimport Utils from \"../../utils/Utils\";\r\nimport { DB_plant } from \"../DB\";\r\nimport Enemy from \"./Enemy\";\r\n\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Bullet extends BaseUI {\r\n\r\n    start()\r\n    {\r\n        let bt = this.GetGameObject(\"trail2\");\r\n        if(bt){\r\n            bt.opacity = 0;\r\n            bt.runAction(cc.fadeTo(0.4,255));\r\n        }\r\n        this.node.scale = 1.2;\r\n    }\r\n    update (dt) {\r\n        if(dt > 1) dt = 1;\r\n        if( this.target)\r\n        {\r\n            let d = this.target.position.add(cc.v3(0,80,0)) .sub(this.node.position);\r\n            if(d.mag() < this.sped * dt *2)\r\n            {\r\n                this.target.getComponent(Enemy).hit(this.plantlv);\r\n                // this.node.position = this.target.position.add(cc.v3(0,80,0))\r\n                this.node.destroy();\r\n                this.node.removeFromParent(true);\r\n                return;\r\n            }\r\n            let v = d.normalize().mul(this.sped * dt);\r\n            this.node.position =this.node.position.add(v);\r\n            this.node.angle = 180-cc.v2(d.x,d.y).signAngle(cc.v2(1,0)) * 180 / Math.PI;\r\n        }\r\n        else\r\n        {\r\n            this.node.removeFromParent(true);\r\n        }\r\n\r\n    }\r\n\r\n    private target:cc.Node = null;\r\n    private sped:number = 700;\r\n    private plantlv = 0;\r\n    async setInfo(target:cc.Node,plantlv:number)\r\n    {\r\n        plantlv = Math.min(plantlv,60)\r\n        this.plantlv = plantlv;\r\n        this.target = target;\r\n\r\n\r\n        // let idx = Math.ceil(plantlv/10);\r\n        // idx = idx > 5 ? 5 : idx;\r\n        // let skpath = `spine:other/bullet${idx}_ske`;\r\n        // let atlaspath = `spine:other/bullet${idx}_tex`;\r\n        // let bullet = this.GetDragonAmature('bsp');\r\n        // bullet.dragonAsset = await Utils.loadRes(skpath,dragonBones.DragonBonesAsset) as dragonBones.DragonBonesAsset;\r\n        // bullet.dragonAtlasAsset = await Utils.loadRes(atlaspath,dragonBones.DragonBonesAtlasAsset) as dragonBones.DragonBonesAtlasAsset;\r\n        // bullet.armatureName = 'Armature';\r\n        // bullet.playAnimation('bullet' + idx,0);\r\n\r\n        // 原逻辑\r\n        // this.GetSprite(\"sp\").spriteFrame = await Utils.loadRes(\"texture/bullets/\"+(plantlv-1),cc.SpriteFrame) as cc.SpriteFrame;\r\n        // let bt = this.GetGameObject(\"trail2\");\r\n        // if(bt){\r\n        //     bt.color = cc.Color.RED.fromHEX(String(DB_plant[plantlv-1][9]))\r\n        //     bt.height =  this.GetGameObject(\"sp\").height;\r\n        // }\r\n        // this.GetGameObject(\"streak\").getComponent(cc.MotionStreak).stroke = this.GetGameObject(\"sp\").height;\r\n        // this.GetGameObject(\"streak\").getComponent(cc.MotionStreak).color = cc.Color.RED.fromHEX(String(DB_plant[plantlv-1][9]))\r\n    }\r\n}\r\n"]}